#!/usr/bin/env ruby
# Docker Event Listener / DDNS
# Original author: Kelly Becker <kbecker@kellybecker.me>
#         Website: http://kellybecker.me
# Original Code: https://gist.github.com/KellyLSB/4315a0323ed0fe1d79b6
# Changes by: Esa Varemo <esa@kuivanto.fi>
# License: MIT

# Set up a proper logger
require 'logger'
log_file = ARGV.first || '-'
log = Logger.new(log_file == '-' ? $stdout : log_file)

# Create a PID file for this service
File.open('/var/run/docker_ddns.pid', 'w+') { |f| f.write($$) }

# Capture the terminate signal
trap("INT") do
#  log.info "Caught INT Signal... Exiting."
  File.unlink('/var/run/docker_ddns.pid')
  puts "Stopped"
  exit
end

# Welcome message
log.info "Starting Docker Dynamic DNS - Event Handler"
log.info "Original author: Kelly Becker <kbecker@kellybeckr.me>"
log.info "        Website: http://kellybecker.me"
log.info "Modified by: Esa Varemo <esa@kuivanto.fi>"

# Default Configuration
ENV['DDNS_KEY']   ||= "/etc/pki/dnssec-keys/docker-ddns-update.key"
ENV['NET_NS']     ||= "192.168.0.201"
ENV['NET_DOMAIN'] ||= "containers.ikioma"


# Listen To Docker.io Events
events = IO.popen('docker events')

# Keep Listening for incoming data
while line = events.gets

  # Container Configuration
  ENV['CONTAINER_EVENT']    = line.split.last
  ENV['CONTAINER_CID_LONG'] = line.gsub(/^.*([0-9a-f]{64}).*$/i, '\1')
  ENV['CONTAINER_CID']      = ENV['CONTAINER_CID_LONG'][0...12]

  # Event Fired info
  log.info "Event Fired (#{ENV['CONTAINER_CID']}): #{ENV['CONTAINER_EVENT']}."

  case ENV['CONTAINER_EVENT']
  when 'start'

    # Get Container Details for DNS
    ENV['CONTAINER_IP_ADDR']  = %x{docker inspect --format='{{.NetworkSettings.IPAddress}}' $CONTAINER_CID_LONG }.strip
    ENV['CONTAINER_HOSTNAME'] = %x{docker inspect --format='{{.Config.Hostname}}' $CONTAINER_CID_LONG}.strip
    ENV['CONTAINER_NAME'] =     %x{docker inspect --format='{{.Name}}' $CONTAINER_CID_LONG}.strip.gsub('/', '')


    # Build the command to update the dns server
    update_command = <<-EOF
    nsupdate -k $DDNS_KEY <<-UPDATE
    server $NET_NS
    zone $NET_DOMAIN
    update delete $CONTAINER_HOSTNAME.$NET_DOMAIN
    update add $CONTAINER_HOSTNAME.$NET_DOMAIN 60 A $CONTAINER_IP_ADDR
    update add $CONTAINER_NAME.$NET_DOMAIN 60 CNAME $CONTAINER_HOSTNAME.$NET_DOMAIN
    send
    UPDATE
    EOF
    

    # Run the nameserver update in the Net Namespace of the LXC Container
    system(update_command.gsub(/^[ ]{4}/, ''))

    # Message an success
    if $?.success?
      log.info "Updated Docker DNS (#{ENV['CONTAINER_CID']}): #{ENV['CONTAINER_HOSTNAME']}.#{ENV['NET_DOMAIN']} 60 A #{ENV['CONTAINER_IP_ADDR']}."
      log.info "       Added alias (#{ENV['CONTAINER_CID']}): #{ENV['CONTAINER_NAME']}.#{ENV['NET_DOMAIN']} 60 CNAME #{ENV['CONTAINER_HOSTNAME']}.#{ENV['NET_DOMAIN']}."
    else
      log.error "We could not update the Docker DNS records for #{ENV['CONTAINER_CID']}. Please check your nsupdate keys."
    end
  when 'die'
    # Get Container Details for DNS
    ENV['CONTAINER_IP_ADDR']  = %x{docker inspect $CONTAINER_CID_LONG | grep '"IPAddress"'}.strip.gsub(/[^0-9\.]/i, '')
    ENV['CONTAINER_HOSTNAME'] = %x{docker inspect $CONTAINER_CID_LONG| grep '"Hostname"' | awk '{print $NF}'}.strip.gsub(/^"(.*)",/i, '\1')
    ENV['CONTAINER_NAME'] =     %x{docker inspect --format='{{.Name}}' $CONTAINER_CID_LONG}.strip.gsub('/', '')


    # Build the command to update the dns server
    update_command = <<-EOF
    nsupdate -k $DDNS_KEY <<-UPDATE
    server $NET_NS
    zone $NET_DOMAIN
    update delete $CONTAINER_HOSTNAME.$NET_DOMAIN
    update delete $CONTAINER_NAME.$NET_DOMAIN
    send
    UPDATE
    EOF
    

    # Run the nameserver update in the Net Namespace of the LXC Container
    system(update_command.gsub(/^[ ]{4}/, ''))

    # Message an success
    if $?.success?
      log.info "Deleted DNS records (#{ENV['CONTAINER_CID']}): #{ENV['CONTAINER_HOSTNAME']}.#{ENV['NET_DOMAIN']} and #{ENV['CONTAINER_NAME']}.#{ENV['NET_DOMAIN']}."
    else
      log.error "We could not update the Docker DNS records for #{ENV['CONTAINER_CID']}. Please check your nsupdate keys."
    end
  end
end

exit
